{
	"info": {
		"_postman_id": "c5641890-6976-4ea3-9a56-19d69da00ed3",
		"name": "Microsoft Graph",
		"description": "[Microsoft Graph](https://docs.microsoft.com/graph/overview) is the gateway to data and intelligence in Microsoft 365. It provides a unified programmability model that you can use to access the tremendous amount of data in Microsoft 365, Windows 10, and Enterprise Mobility + Security. Use the wealth of data in Microsoft Graph to build apps for organizations and consumers that interact with millions of users.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Delegated",
			"item": [
				{
					"name": "Applications",
					"item": [
						{
							"name": "Get applications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10eef7ee-396c-47f9-950b-c839319f99bd",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "56eb6478-9731-429d-b759-04785ced34d8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/applications"
							},
							"response": []
						},
						{
							"name": "Create an application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a4e624b-61eb-490c-856b-d68ed98d22ca",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ApplicationId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ef1ec46a-3a17-4350-8288-3b5944f12f68",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"My App\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/applications"
							},
							"response": []
						},
						{
							"name": "Get application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9acc2a15-b574-4ae7-9905-4e61482c54c2",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "41e3c638-4caf-4652-9548-743f8fa9909f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/applications/{{ApplicationId}}"
							},
							"response": []
						},
						{
							"name": "Get application owners",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e65e0165-689d-4ea0-8cfb-c530b33e6e28",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2f37bc6e-545c-4aac-81a5-eecfabbec47d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/applications/{{ApplicationId}}/owners"
							},
							"response": []
						},
						{
							"name": "Update application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8cf072c2-ec18-448e-b335-f9efdd23769e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3a139336-589c-4fb3-bb71-5af54a5bbd66",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signInAudience\": \"AzureADMyOrg\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/applications/{{ApplicationId}}"
							},
							"response": []
						},
						{
							"name": "Delete application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7dc581e8-6f2c-4f01-992b-c252231dd457",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ApplicationId\", \"\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d9cd5bdf-0eec-4eeb-b55d-abeb25f96147",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "https://graph.microsoft.com/beta/applications/{{ApplicationId}}"
							},
							"response": []
						}
					],
					"id": "185ad624-4d5e-4210-abc2-73e7cedefa34"
				},
				{
					"name": "Batch",
					"item": [
						{
							"name": "Perform parallel GETS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2bc8ce8b-3727-43fe-bbec-fe12237ef890",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7d9b18c9-ec07-4de1-9ceb-6a73742e0087",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requests\": [\n    {\n      \"url\": \"/me?$select=displayName,jobTitle,userPrincipalName\",\n      \"method\": \"GET\",\n      \"id\": \"1\"\n    },\n    {\n      \"url\": \"/me/messages?$filter=importance eq 'high'&$select=from,subject,receivedDateTime,bodyPreview\",\n      \"method\": \"GET\",\n      \"id\": \"2\"\n    },\n    {\n      \"url\": \"/me/events\",\n      \"method\": \"GET\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/$batch"
							},
							"response": []
						},
						{
							"name": "Combine a POST and a GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "547920c6-ecc9-4ef5-8563-42f04c5bcf17",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c792a608-e56a-4be9-91d1-e8dc3dfa1fe9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requests\": [\n    {\n      \"url\": \"/me/drive/root/children\",\n      \"method\": \"POST\",\n      \"id\": \"1\",\n      \"body\": {\n        \"name\": \"TestBatchingFolder\",\n        \"folder\": {}\n      },\n      \"headers\": {\n        \"Content-Type\": \"application/json\"\n      }\n    },\n    {\n      \"url\": \"/me/drive/root/children/TestBatchingFolder \",\n      \"method\": \"GET\",\n      \"id\": \"2\",\n      \"DependsOn\": [\n        \"1\"\n      ]\n    }\n  ]\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/$batch"
							},
							"response": []
						}
					],
					"id": "1cd43e6d-8da5-4073-b149-72014a8f4362"
				},
				{
					"name": "Events",
					"item": [
						{
							"name": "Get rooms",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "591289c0-9ca4-484b-b894-f53b350a7dde",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5618c592-fd87-4e5f-b56c-6040328f9147",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/beta/me/findRooms"
							},
							"response": []
						},
						{
							"name": "Get my events for next week",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4dde4053-b2b9-46c0-93ed-be671c5016fa",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Calendar.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"EventId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6c590a9b-8f56-4b6f-9b9a-782eed87c3ce",
										"exec": [
											"postman.setEnvironmentVariable('Today',(new Date()).toISOString());",
											"postman.setEnvironmentVariable('NextWeek',(new Date().addDays(7)).toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "45306ce5-b99d-422e-8557-8adf5eb4898c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/calendarview?startdatetime={{Today}}&enddatetime={{NextWeek}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"calendarview"
									],
									"query": [
										{
											"key": "startdatetime",
											"value": "{{Today}}"
										},
										{
											"key": "enddatetime",
											"value": "{{NextWeek}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my calendars",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28efef57-eaec-43e0-888e-b93431d704e7",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"CalendarId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "35982ee0-41a6-445f-8b46-dc920ecfefec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/calendars"
							},
							"response": []
						},
						{
							"name": "Add Microsoft Graph community call event",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f2ff997-602a-4af5-a8ab-aad3c0a8b8da",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Calendar.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "255a29f5-9ae1-4241-a342-0bcf261ac7aa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"Microsoft Graph community call\",\n  \"body\": {\n    \"contentType\": \"HTML\",\n    \"content\": \"Call link: https://aka.ms/mmkv1b Submit a question: https://aka.ms/ybuw2i\"\n  },\n  \"start\": {\n    \"dateTime\": \"2018-09-04T08:00:00\",\n    \"timeZone\": \"Pacific Standard Time\"\n  },\n  \"end\": {\n    \"dateTime\": \"2018-09-04T09:00:00\",\n    \"timeZone\": \"Pacific Standard Time\"\n  },\n  \"location\": {\n    \"displayName\": \"Skype for Business\"\n  },\n  \"recurrence\": {\n    \"pattern\": {\n      \"type\": \"relativeMonthly\",\n      \"interval\": 1,\n      \"daysOfWeek\": [\n        \"Tuesday\"\n      ],\n      \"index\": \"first\"\n    },\n    \"range\": {\n      \"type\": \"noEnd\",\n      \"startDate\": \"2017-08-29\"\n    }\n  }\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/events"
							},
							"response": []
						},
						{
							"name": "Get my Microsoft Graph community call events",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c812d6bd-3bca-424e-bb6d-6c07e6e439c7",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Calendar.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0bef2207-8e0d-4f59-be6e-d02209d252ab",
										"exec": [
											"postman.setEnvironmentVariable('Today',(new Date()).toISOString());",
											"postman.setEnvironmentVariable('NextWeek',(new Date()).toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3441abd4-8d40-40d9-9e01-155e668fde57",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/events?$filter=subject eq 'Microsoft Graph community call'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"events"
									],
									"query": [
										{
											"key": "$filter",
											"value": "subject eq 'Microsoft Graph community call'"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "3737d14e-49ff-4554-90c3-0a64d4959b88"
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "Get my files",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c922339-0cf1-49b8-9000-f98c21a34ed4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "eb355d79-3175-4cdf-ad2d-da0d4ff4bad9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/drive/root/children"
							},
							"response": []
						},
						{
							"name": "Get my recent files",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "555613ab-75d6-49e9-837d-5326473cf05c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "99663edf-de8d-4d23-be99-058d386a2b70",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/drive/recent"
							},
							"response": []
						},
						{
							"name": "Get files shared with me",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1d41471-0847-4b0c-a7e5-61bec9bec4e7",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fdb90be3-5ce1-4f15-b9bb-95aa6ce33bfb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/drive/sharedWithMe"
							},
							"response": []
						},
						{
							"name": "Search my OneDrive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d4aa299-86db-4c0b-8611-4cf12fd85041",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6dce975d-d9f2-4b83-b955-842112200a36",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/drive/root/search(q='finance')?select=name,id,webUrl",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"drive",
										"root",
										"search(q='finance')"
									],
									"query": [
										{
											"key": "select",
											"value": "name,id,webUrl"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4d8cfc6-8dac-4069-984c-460f3acc9d2a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e16a0994-c695-43db-b219-8714277ed93a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New Folder\",\n  \"folder\": {}\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/drive/root/children"
							},
							"response": []
						}
					],
					"id": "64c2bc2a-adbf-4bf9-9711-6fb5f496f3ca"
				},
				{
					"name": "Groups",
					"item": [
						{
							"name": "Get groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "353d4a17-9f80-4e77-8a54-26ddb4617bba",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"GroupId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5924b797-7746-4bfa-bc62-6b6641e07b84",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/groups"
							},
							"response": []
						}
					],
					"id": "632d854e-5428-4c4a-bfbb-a81fdfacc4d7"
				},
				{
					"name": "Insights",
					"item": [
						{
							"name": "Get items trending around me",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72ed7f8e-8ca0-4fc5-bbb7-89ec16ef015c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5ca0cbc9-e835-4cc4-85a1-3d011b714bd8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/beta/me/insights/trending"
							},
							"response": []
						},
						{
							"name": "Get people I'm working with",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "089b7258-1ab9-48b3-9ec2-0b508b855df4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a4870bcb-958a-4e56-afa2-4e84ea8ce62c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/beta/me/workingWith"
							},
							"response": []
						}
					],
					"id": "fb27486e-2bb8-457c-8038-c7f674f1f148"
				},
				{
					"name": "Mail",
					"item": [
						{
							"name": "Get my messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e3f5f87-5465-45b4-be3f-ad30cc29a104",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7c461ae2-972e-4d75-8e37-5742ee9a6b2a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/messages"
							},
							"response": []
						},
						{
							"name": "Get my important messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12b56935-4e5e-47e4-99b8-9970b1d98d9c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "00099038-5963-4f1a-b833-7d7234a28b58",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages?$filter=importance eq 'high'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$filter",
											"value": "importance eq 'high'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my messages from an address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fae1bad3-c711-4f2d-b3d9-36bfe5f80d3b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e08f697d-8a91-418c-860b-7b4811e858c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages?$filter=(from/emailAddress/address) eq '{{UserName}}'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$filter",
											"value": "(from/emailAddress/address) eq '{{UserName}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search my messages for \"Weekly Digest\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c26e53aa-f0ee-40f1-ab0b-393b99d25a4e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ab7a8473-879b-4766-b66d-b58e5452d2cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages?$search=\"Weekly Digest\"",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$search",
											"value": "\"Weekly Digest\""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my messages I'm at mentioned in",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e586916-624b-4701-8379-b8d7b7da1f20",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a0f3aa94-2eea-43ba-aaae-7c62715e3319",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/me/messages?$filter=mentionsPreview/isMentioned eq true&$select=subject,sender,receivedDateTime",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$filter",
											"value": "mentionsPreview/isMentioned eq true"
										},
										{
											"key": "$select",
											"value": "subject,sender,receivedDateTime"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16362b08-56a7-4e26-83ef-436c0dfda6cd",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.environment.get(\"MessageId\") === \"\")\r",
											"            {\r",
											"                console.log(\"You need to run *On behalf of a User | Get my messages* request first or set a MessageId environment variable.\");\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6ed42bd1-21d2-47ae-9188-0e270cebd0c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/messages/{{MessageId}}"
							},
							"response": []
						},
						{
							"name": "Get my mailbox rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7982dca-df83-4698-b58a-65598c95f0e1",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a86113e-a373-4696-a82e-6c0c0a708cbc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messagerules"
							},
							"response": []
						},
						{
							"name": "Get my categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5dcd0170-dfa0-48a0-9fb2-4b327e56cbfd",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "13816e86-a1af-4b89-935e-a4e933059fb4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/outlook/masterCategories"
							},
							"response": []
						},
						{
							"name": "Get email headers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0786e6da-be67-4e19-804c-fc9e87833989",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d064f4e2-424b-4a73-bf6b-f3b4cc074c7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages?$select=internetMessageHeaders&$top=1",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$select",
											"value": "internetMessageHeaders"
										},
										{
											"key": "$top",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Send mail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e6eb24a-40cd-44d8-9f5c-9e1aa17e7a55",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserEmail\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need manual set a **UserName** environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add user delegated permissions in your application to at least *Mail.Send* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "88c77075-54a0-46c5-af5b-1654b3e5f778",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"message\": {\r\n    \"subject\": \"Meet for lunch?\",\r\n    \"body\": {\r\n      \"contentType\": \"Text\",\r\n      \"content\": \"The new cafeteria is open.\"\r\n    },\r\n    \"toRecipients\": [\r\n      {\r\n        \"emailAddress\": {\r\n          \"address\": \"{{UserName}}\"\r\n        }\r\n      }\r\n    ],\r\n    \"ccRecipients\": [\r\n      {\r\n        \"emailAddress\": {\r\n          \"address\": \"{{UserName}}\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"saveToSentItems\": \"false\"\r\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/sendMail"
							},
							"response": []
						},
						{
							"name": "Get mailbox settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7e0c7b6-e03f-45c1-a194-37680f02307d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "60f711f4-42c7-4563-8dfe-46d0e619716f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/mailboxSettings"
							},
							"response": []
						},
						{
							"name": "Set automatic replies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e589c38-9d94-40c8-9fe2-4e89a957a91a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ea39a83e-b612-4810-9ce5-f2fbc542eaef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#Me/mailboxSettings\",\r\n\"automaticRepliesSetting\": {\r\n        \"status\": \"scheduled\",\r\n        \"externalAudience\": \"contactsOnly\",\r\n        \"internalReplyMessage\": \"<html>\\n<body>\\n<div>I'm on vacation!</div>\\n<div><br>\\n</div>\\n<div>Kindly regards</div>\\n<div></div>\\n</body>\\n</html>\\n\",\r\n        \"externalReplyMessage\": \"<html>\\n<body>\\n<div></div>\\n<div>I'm on vacation.</div>\\n<div><br>\\n</div>\\n<div>Kindly regards</div>\\n</body>\\n</html>\\n\",\r\n        \"scheduledStartDateTime\": {\r\n            \"dateTime\": \"2019-07-15T08:00:00.0000000\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"scheduledEndDateTime\": {\r\n            \"dateTime\": \"2019-08-09T16:00:00.0000000\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        }\r\n    }\r\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/mailboxSettings"
							},
							"response": []
						}
					],
					"id": "e89427fa-a7b2-4bc1-8001-b0d92d78a28c"
				},
				{
					"name": "Notebooks",
					"item": [
						{
							"name": "Get my notebooks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a276cbd8-3ef4-417c-838d-e13fbbef7632",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"NotebookId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cd5b4b48-e728-4286-963d-073a8a18a5f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/onenote/notebooks"
							},
							"response": []
						},
						{
							"name": "Get my notebook sections",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0a4fe2b8-bed2-428d-b7d6-885619e5f8df",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SectionId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ecbe9c2e-0eb6-4f23-8c2c-28a0a0ea40b4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/onenote/sections"
							},
							"response": []
						},
						{
							"name": "Get my notebook pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4024c8ee-62a0-4db3-8914-3934adffda28",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PageId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "60be61b5-3ae7-448b-9911-4fa874b6062a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/onenote/pages"
							},
							"response": []
						},
						{
							"name": "Create notebook",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10700a30-1bdb-4b58-8d20-1bdbee809d71",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"NotebookId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4b56a66d-4af7-4ac9-bb2f-f9e08b3d4fe0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Postman Notebook 1\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/onenote/notebooks"
							},
							"response": []
						},
						{
							"name": "Create section",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6bf7acd5-55ed-481e-a4ea-c975f8b7d391",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SectionId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b69bf16a-8e31-4400-a6a3-438774996b51",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Section 1\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/onenote/notebooks/{{NotebookId}}/sections"
							},
							"response": []
						}
					],
					"id": "33da64f4-c13d-499a-8715-69ca0c74a6c5"
				},
				{
					"name": "Extensions",
					"item": [
						{
							"name": "Open extensions",
							"item": [
								{
									"name": "Get an open extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "45a2ab56-fbce-4d97-94d1-19018e27c03d",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "59091815-4830-433d-b165-5ba95169363b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{UserAccessToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/me?$select=id,displayName,mail,mobilePhone&$expand=extensions",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"me"
											],
											"query": [
												{
													"key": "$select",
													"value": "id,displayName,mail,mobilePhone"
												},
												{
													"key": "$expand",
													"value": "extensions"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create an open extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d98b656-7560-4265-ac2c-ce82511192ed",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "6cd372d4-f564-4ec9-9493-c4941affb075",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{UserAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"@odata.type\": \"microsoft.graph.openTypeExtension\",\n  \"extensionName\": \"com.contoso.roamingSettings\",\n  \"theme\": \"dark\",\n  \"color\": \"purple\",\n  \"lang\": \"Japanese\"\n}"
										},
										"url": "https://graph.microsoft.com/v1.0/me/extensions"
									},
									"response": []
								},
								{
									"name": "Update an open extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "738007f5-708c-49e6-9ea8-0a978327970a",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bf03148e-aeb0-4f4d-836b-fe923af18f73",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{UserAccessToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"theme\": \"light\",\n  \"color\": \"red\",\n  \"lang\": \"Swahili\"\n}"
										},
										"url": "https://graph.microsoft.com/v1.0/me/extensions/{{ExtensionId}}"
									},
									"response": []
								}
							],
							"id": "75d398f4-79f1-40e6-a0be-8ce12bbeed93"
						},
						{
							"name": "Schema extensions",
							"item": [
								{
									"name": "Get avaiable schema extensions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "195ee560-4a6c-4ce7-b2d8-c3196710c753",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f667fd22-e5ac-4eaf-870f-741133656a38",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{UserAccessToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/schemaExtensions"
									},
									"response": []
								},
								{
									"name": "Create a group with extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a20b2ac-30b7-4b9c-a85c-24b4975fe1c3",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "95cab721-f30e-4d8d-a8fd-4591ecec1108",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{UserAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Extensions sample group\",\n  \"description\": \"Extensions sample group\",\n  \"groupTypes\": [\n    \"Unified\"\n  ],\n  \"mailEnabled\": true,\n  \"mailNickname\": \"extSample123\",\n  \"securityEnabled\": false,\n  \"adatumisv_courses\": {\n    \"id\": \"123\",\n    \"name\": \"New Managers\",\n    \"type\": \"Online\"\n  }\n}"
										},
										"url": "https://graph.microsoft.com/v1.0/groups"
									},
									"response": []
								},
								{
									"name": "Filter groups by extensions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "90f06e45-1770-491d-8749-8a725093e3db",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d8013911-89bb-489d-88ad-785c3661a30d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{UserAccessToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/groups?$filter=adatumisv_courses/id eq '123'&$select=id,displayName,adatumisv_courses",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"groups"
											],
											"query": [
												{
													"key": "$filter",
													"value": "adatumisv_courses/id eq '123'"
												},
												{
													"key": "$select",
													"value": "id,displayName,adatumisv_courses"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update a group with extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8b975a8-9dec-4fef-845a-279fe9f11e01",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2b7fa3e3-1f33-42bc-98aa-9df72033ebf2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{UserAccessToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "SdkVersion",
												"type": "text",
												"value": "postman-graph/v2.0"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"adatumisv_courses\": {\n    \"id\": \"123\",\n    \"name\": \"More Managers\",\n    \"type\": \"Online\"\n  }\n}"
										},
										"url": "https://graph.microsoft.com/v1.0/groups/{{GroupId}}"
									},
									"response": []
								}
							],
							"id": "f401a1b4-89db-49ac-8f58-e7a864e8ee45"
						}
					],
					"id": "4c2b2acc-ed1b-42f9-8ca0-7a7195116222"
				},
				{
					"name": "People",
					"item": [
						{
							"name": "Get people",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b12afe36-a282-4ba2-8cfc-8c9eb1f46e65",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "671c090b-1853-451e-95fd-00c61313099f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/people"
							},
							"response": []
						},
						{
							"name": "Get people $top $skip",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6d1ebcd-7894-40a4-9707-7301946d4cc3",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b5d77372-4a30-4a38-8acc-39c64df8b6ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people?$top=10&$skip=10",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people"
									],
									"query": [
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$skip",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $orderby",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8bc9aa02-8883-44a1-b9c4-dcdad6f9faa4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1965f6e3-262c-4aaf-aa20-b0e70cc89671",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$orderby=DisplayName",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$orderby",
											"value": "DisplayName"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81d217a3-54c5-445e-95ef-668e770c57d5",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "56e433f7-98c0-4a95-be4f-e522144ee330",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$select=DisplayName,scoredEmailAddresses&$filter=DisplayName eq 'New Hires'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$select",
											"value": "DisplayName,scoredEmailAddresses"
										},
										{
											"key": "$filter",
											"value": "DisplayName eq 'New Hires'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $search",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b63df2c-6f96-41ce-b536-05ea25bd6a69",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f39b2e7f-dcd6-426d-9ef1-f0d956d69014",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$search=j",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$search",
											"value": "j"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $search topic",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1277dfb6-ebd2-4ca4-b807-d9a22d435d11",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b34ab6e1-4724-4896-be6a-98a6ad174615",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$search=\"ma topic: feature planning\"",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$search",
											"value": "\"ma topic: feature planning\""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $search fuzzy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f30e7969-4328-4574-ac7e-f92add12380a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a716f1ee-3757-433f-994e-4777cfb32415",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$search=\"John\"",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$search",
											"value": "\"John\""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a user's related people",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2a4dcb0-064f-48c2-a005-4f441a265040",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6cc7f914-494f-486c-9220-cd594d1ceb98",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/users('{{UserName}}')/people/"
							},
							"response": []
						}
					],
					"id": "0766b0d4-bfd7-4979-b4fb-5897bec64b55"
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "Search messages",
							"id": "22f08e4f-a386-4f41-a77c-67c2911395e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"message\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search messages top results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1892839-27d4-42f8-bb20-da8d81665d26",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f26396ee-3ab4-40ac-8c6c-7d7f97baec43",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requests\": [\r\n        {\r\n            \"entityTypes\": [\r\n                \"message\"\r\n            ],\r\n            \"query\": {\r\n                \"queryString\": \"contoso\"\r\n            },\r\n            \"enableTopResults\": true\r\n        }\r\n    ]\r\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search events",
							"id": "8a140853-ea91-4ddd-96d6-3431b4ff3fe7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"event\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search files and folders",
							"id": "9a35b57a-7a7f-4853-a2e9-fabc93d286cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n                //\"queryString\": \"contoso filetype:pdf OR filetype:docx\"\n                //\"queryString\": \"contoso path:\\\"https://contoso.sharepoint.com/sites/Team Site/Documents/\\\\\"\"                              \n            }\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search lists",
							"id": "db483635-5431-45e9-94e3-c5547c50a309",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"list\"\n            ],\n            \"query\": {\n                \"queryString\": \"*\"\n            }\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search list items",
							"id": "b0611ed6-8daa-46bc-a0ae-f7148b658858",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search list items with property selection",
							"id": "33d903a9-8cdf-43fb-b503-a6a0ccfb4de3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"issue\"\n            },\n            \"fields\": [\n                \"id\",\n                \"name\",                \n                \"contentclass\",\n                \"title\",\n                \"fooCustomProperty\"\n            ]\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search sites",
							"id": "fd101098-3881-4c47-862d-db9c64c181f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"site\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search drives",
							"id": "abf5f3fe-317d-419c-be49-bf3f0f8dec77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"drive\"\n            ],\n            \"query\": {\n                \"queryString\": \"*\"\n                //Note that personal OneDrive is not returned in this query\n            }\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search result template",
							"id": "03f6be59-c750-4376-99b3-28773cb287c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requests\": [\r\n        {\r\n            \"entityTypes\": [\r\n                \"externalItem\"\r\n            ],\r\n            \"contentSources\": [\r\n                \"/external/connections/sampleConnectionId\"\r\n            ],\r\n            \"query\": {\r\n                \"queryString\": \"sample\"\r\n            },\r\n            \"resultTemplateOptions\": {\r\n                \"enableResultTemplate\": true\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search external items",
							"id": "56b636f4-1ddb-4326-8e61-f8610fe3f20c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"externalItem\"\n            ],\n            \"contentSources\": [\n                \"/external/connections/sampleConnectionId\"\n            ],\n            \"query\": {\n                \"queryString\": \"sample\"\n            },\n            \"fields\": [\n                \"title\",\n                \"iconurl\",\n                \"lastModifiedDate\"\n            ]\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Page search results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f755ce8d-0572-4615-b7ee-dd379d2a766f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d2cc54b6-98d7-4496-9a1a-bdc15a4794cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"from\": 0,\n            \"size\": 15\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Sort search results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ddf324e-1e0d-45fb-9bd7-151078a449e0",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b0838562-9653-4bd8-a010-a3c9bcb22aca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"sortProperties\": [\n                {\n                    \"name\": \"lastModifiedDateTime\",\n                    \"isDescending\": \"true\" // default is false\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Request spelling correction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2faa2750-0f0c-4509-a35e-220339e43563",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "26a36984-448d-4394-9a4d-970359120e61",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "SdkVersion",
										"type": "text",
										"value": "postman-graph/v2.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requests\": [\n    {\n      \"entityTypes\": [\n        \"message\"\n      ],\n      \"query\": {\n        \"queryString\": \"informatino\"\n      },\n      \"from\": 0,\n      \"size\": 5\n    }\n  ],\n  \"queryAlterationOptions\": {\n    \"enableSuggestion\": true,\n    \"enableModification\": true\n  }\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Refine results with string aggregations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "646cd294-b073-4315-82a3-8244e85ee98e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8034c010-27f5-40a5-a5c4-5b84f3eb8911",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"aggregations\": [\n                {\n                    \"field\": \"FileType\",\n                    \"size\": 20,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"count\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0\n                    }\n                },\n                {\n                    \"field\": \"contentclass\",\n                    \"size\": 20,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"keyAsString\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Refine results with numeric aggregations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a7c9b0a-2f5c-400a-89e8-ce43d4e8249b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f44a0e80-1713-41b1-a37d-2e9f778cc90d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"aggregations\": [\n                {\n                    \"field\": \"Size\",\n                    \"size\": 15,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"keyAsNumber\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0,\n                        \"ranges\": [\n                            {\n                                \"to\": \"100\"\n                            },\n                            {\n                                \"from\": \"100\",\n                                \"to\": \"1000\"\n                            },\n                            {\n                                \"from\": \"1000\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Apply refined query passing the aggregationToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "340d94d2-b1c6-4b12-84ce-0063972acb5b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1f4594d2-2696-433c-9388-0b0852d7af8f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"aggregationFilters\": [\n                \"contentclass:\\\"ǂǂ5354535f4c6973744974656d5f446f63756d656e744c696272617279\\\"\",\n                \"FileType:\\\"ǂǂ646f6378\\\"\"                \n            ],\n            \"aggregations\": [\n                {\n                    \"field\": \"FileType\",\n                    \"size\": 20,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"count\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0\n                    }\n                },\n                {\n                    \"field\": \"contentclass\",\n                    \"size\": 15,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"keyAsString\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Trim duplicated SharePoint search results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09819ca8-1936-45cd-92db-5f877d5426e4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read.All, Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a8e65f3-1970-4c54-9664-e5368c86b583",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"trimDuplicate\": true\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						},
						{
							"name": "Search with queryTemplate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3e285ce-98b3-41f6-957d-2d4873fccb7d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read.All, Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "80b23659-cc43-4285-917e-ef910c09bf8e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\",\n                \"queryTemplate\": \"({searchTerms})\"\n            }\n        }\n    ]\n}"
								},
								"url": "https://graph.microsoft.com/beta/search/query"
							},
							"response": []
						}
					],
					"id": "986c7bde-b468-44e8-86b6-607b453646ae"
				},
				{
					"name": "Security",
					"item": [
						{
							"name": "Get alerts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d6110c8-b25b-46f3-878b-d1a2fba6d171",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f3a318c9-f52c-4355-9780-f0c9399074b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/security/alerts"
							},
							"response": []
						},
						{
							"name": "Get alerts with high severity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ebea104-b958-4604-a155-4bb110cb9333",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9c8f9856-a390-46b6-aae9-d8b738a68b4c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Severity eq 'High'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Severity eq 'High'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts from Azure Security Center",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c90fb41-fe12-434e-b371-444ffa364a44",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a5756010-f916-47b6-907f-8c9047f0f858",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=vendorInformation/provider eq 'ASC'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "vendorInformation/provider eq 'ASC'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8dd8963-0ae5-4bfd-84b5-e3e7ba1da8ca",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ea890d32-995a-4de2-be84-a04ba8d74ece",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Category eq 'ransomware'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Category eq 'ransomware'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by destination",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08dd1277-edc8-4a7d-9ee5-242ef7ca9858",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bb80a1bd-dc13-4d0a-9e8c-679d82b6044f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=networkConnections/any(d:d/destinationAddress eq '{destination-address}')",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "networkConnections/any(d:d/destinationAddress eq '{destination-address}')"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c273eca1-4985-46c8-8012-f281000402f8",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "396b7b5b-29eb-4c1e-8a3d-e5ef88cd8dbd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Status eq 'NewAlert'&$top=1",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Status eq 'NewAlert'"
										},
										{
											"key": "$top",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get secure scores",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d886a88e-fffd-43ec-83a2-e190d69f398f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f0a3c4f4-a383-431e-9d98-4cc8cadbf211",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/secureScores?$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"secureScores"
									],
									"query": [
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get secure scores control profiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83cc60c2-d74f-47cf-abba-a93fb5643a84",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e526134f-dee8-4546-9aa6-5ae9cc738526",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/secureScoreControlProfiles?$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"secureScoreControlProfiles"
									],
									"query": [
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get TI indicators",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c409dd70-8bb3-438e-b079-789ea8df8d01",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TIIndicatorId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "78ba3ff2-7c8b-420e-965d-20d52e4c712b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/beta/security/tiIndicators"
							},
							"response": []
						},
						{
							"name": "Get TI indicator by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f1895f3-88f0-4983-9d0d-7a4080c6ba54",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "82e2b0d5-7730-46fc-90f0-f4a892c8295d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/beta/security/tiIndicators/{{TIIndicatorId}}"
							},
							"response": []
						},
						{
							"name": "Get security actions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f65fa992-2ff3-4788-96bb-17a175451d64",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "50ecb9a7-1caa-46e9-87e0-fb9085bdb069",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/beta/security/securityActions"
							},
							"response": []
						},
						{
							"name": "Get security action by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8dd57c23-3e05-471b-be54-c71242155d25",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "64ee4642-20f0-4b83-8a63-ee6ee27b496c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/beta/security/securityActions/{{SecurityActionsId}}"
							},
							"response": []
						}
					],
					"id": "cbd209f7-4291-419b-b4c7-5d5753c0aa24"
				},
				{
					"name": "SharePoint",
					"item": [
						{
							"name": "Get my organization's default site collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d064c1a-c100-47e1-bddc-bdb1d99577bc",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SiteId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "354948e3-2f1a-4804-b9a4-896a92473f1a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root"
							},
							"response": []
						},
						{
							"name": "Get the doc libs in root site",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e362a72-b222-4472-97e8-68820bd6f34c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ListId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "79c3e1d0-08ac-4cf4-9e66-bd2013f03ce3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root/drives"
							},
							"response": []
						},
						{
							"name": "Search for site by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ff3a4b-5729-4492-96c7-e150e6506de2",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d97bff59-efa1-4358-bb8f-92b4c4c7c27a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites?search=contoso",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites"
									],
									"query": [
										{
											"key": "search",
											"value": "contoso"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get subsites of site",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "521ea6c4-97ba-4d51-a0e4-61e545bb9cdb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6e9d6c4b-13f7-40c1-a372-b7b283edcf96",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root/sites"
							},
							"response": []
						},
						{
							"name": "Get site columns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67040f57-15ee-4f64-ade7-fd85ddc1abed",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "08b8e388-9ebf-4222-af9c-54b9422a8086",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root/columns"
							},
							"response": []
						},
						{
							"name": "Get site content types",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "edad8ed1-5af6-428b-9dc8-cb58b080474e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "39d462b9-5620-42e2-9e86-c792b4ae3a9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root/contentTypes"
							},
							"response": []
						},
						{
							"name": "Get site lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cf54657-334a-4fd0-b58f-095e43fff33d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ListId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2c2d752b-32d6-45a5-aef1-dd365e403d79",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root/lists"
							},
							"response": []
						},
						{
							"name": "Get list columns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5a22a54-08ea-46fd-8027-9dd8a80d1347",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7e0ff422-bd2f-4248-8c46-0728bb3dd06e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root/lists/{{ListId}}/columns"
							},
							"response": []
						},
						{
							"name": "Get list content types",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e396b62d-0450-468a-aefd-6812958537ad",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dbe4e19e-71e9-4276-8ced-1b989b985e7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root/lists/{{ListId}}/contentTypes"
							},
							"response": []
						},
						{
							"name": "Get list items",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08ac3119-8845-43ab-b5d6-573fb39e055c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "47c77074-1bbc-4145-9186-e4633ddb6176",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites/root/lists/{{ListId}}/items"
							},
							"response": []
						},
						{
							"name": "Get list items titled \"Contoso Home\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68b4b1e3-40d1-40e4-a2a5-05214fb9dfa9",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "09f6f4eb-c8fe-416e-bb77-f2e3838c1991",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "HonorNonIndexedQueriesWarningMayFailRandomly",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/lists/{{ListId}}/items?$filter=fields/Title eq 'Contoso Home'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"lists",
										"{{ListId}}",
										"items"
									],
									"query": [
										{
											"key": "$filter",
											"value": "fields/Title eq 'Contoso Home'"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "45e3a777-2d83-4854-b70b-c5b05179ba68"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Get subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d61a89-0eb8-47bb-8209-cb7235f975fb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "be4f1649-c6bc-4be9-9b0d-bdc41d6bf3db",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/subscriptions"
							},
							"response": []
						}
					],
					"id": "ed27e214-1ed2-4563-b512-b4dd7a2d49ab"
				},
				{
					"name": "Tasks - Planner",
					"item": [
						{
							"name": "Get Planner tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01669859-9bf6-4b90-b6c4-234f01283915",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "eb67191d-b3da-4590-b2d6-0c2b864cfbf0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/planner/tasks"
							},
							"response": []
						},
						{
							"name": "Get Planner tasks for a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33c6d769-2621-4cbd-a36a-77b046c71bd2",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9c35af74-3e77-469a-b177-6421a2f9426f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/users/{{UserName}}/planner/tasks"
							},
							"response": []
						},
						{
							"name": "Get Planner plans associated with group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12856264-c04b-487b-869f-8c839c48d02f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "93450678-9584-4856-9868-c5fc47136f53",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/groups/{{GroupId}}/planner/plans"
							},
							"response": []
						},
						{
							"name": "Get plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08b1feaa-072b-4117-a18f-8d5f8a0667a4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2f647f6d-2a72-4b7b-a552-c564e9879b5b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/planner/plans/{{PlanId}}"
							},
							"response": []
						},
						{
							"name": "Update plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb5dfbd4-9718-413d-ac39-1c6dd1119c5b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "324bf895-38d9-4b7c-88a7-ee368231dbd2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"value": "{{PlanETag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated plan title\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/planner/plans/{{PlanId}}"
							},
							"response": []
						},
						{
							"name": "Get plan buckets",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c037f504-9011-4100-9a26-73ffcdf7a1b8",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9a0e1e19-721e-437e-9f32-e2fb82275d3d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/planner/plans/{{PlanId}}/buckets"
							},
							"response": []
						},
						{
							"name": "Create a bucket in a plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac282c1f-55e7-4147-b5a4-e65bf2bfc92f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"BucketId\", json.id);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e1b1b084-3b20-4916-b20f-d56072254ead",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{PlanETag}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New bucket\",\n  \"planId\": \"{{PlanId}}\",\n  \"orderHint\": \" !\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/planner/buckets"
							},
							"response": []
						},
						{
							"name": "Update a bucket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b6dfed1-132c-4f6f-b2f1-f5c674767d57",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "84ffb00d-a927-453d-9b77-19179ccc62a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{PlanETag}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Updated bucket name\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/planner/buckets/{{BucketId}}"
							},
							"response": []
						},
						{
							"name": "Get Planner tasks for a plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb40f5ab-bcbb-4e68-be4d-3d8277c254bd",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TasksId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1f80b8e4-2559-4c80-9147-39aad36f4a5a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/planner/plans/{{PlanId}}/tasks"
							},
							"response": []
						},
						{
							"name": "Get Planner task by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dfb67bc8-6309-4cbc-9d83-c9350eb3cf56",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "77a5b585-4cd2-4b17-aa05-24088e499183",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/planner/tasks/{{TaskId}}"
							},
							"response": []
						},
						{
							"name": "Create a Planner task",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df3c982a-57dc-494c-966f-463e05a1a808",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"            postman.setEnvironmentVariable(\"TaskId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b8010607-c13a-4afd-bfbf-07b5e115db1c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"planId\": \"{{PlanId}}\",\n  \"title\": \"New Task\",\n  \"assignments\": {}\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/planner/tasks"
							},
							"response": []
						},
						{
							"name": "Update a Planner task",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c16a35c-3180-4798-908e-d4ce5b490922",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "abdfe2b6-e4e3-4eba-af6d-58fc3d5d9666",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"value": "{{PlanETag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated task title\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/planner/tasks/{{TaskId}}"
							},
							"response": []
						},
						{
							"name": "Get Planner task details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e4c2409-4e7c-48cb-a38a-998b9a681c2b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5dd45251-108b-414d-9623-99bef5240825",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/planner/tasks/{{TaskId}}/details"
							},
							"response": []
						}
					],
					"id": "4e8b9afb-00e6-4c27-9240-599fdd90fb1f"
				},
				{
					"name": "Tasks - Todo",
					"item": [
						{
							"name": "Get my To Do lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb78b625-6a32-4eaf-ab05-7e41a381e18a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskListId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b0a9445a-0f11-47c5-8e19-48d75e5d2a82",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists"
							},
							"response": []
						},
						{
							"name": "Get my To Do list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f38a1c5-9190-4a9a-b8c9-efa19f3845a2",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "09738edf-edd5-4dff-aed0-3c4bd9577822",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}"
							},
							"response": []
						},
						{
							"name": "Create a To Do list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d135f780-a1d8-413d-b6af-b9930014c3db",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskListId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "009d4848-c726-498a-b7e7-7f4899f3af65",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"displayName\": \"Postman created list\"\r\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists/"
							},
							"response": []
						},
						{
							"name": "Update a To Do list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3a553bc-fbc2-4229-ac81-ef81e5322537",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskListId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6cdac1aa-0f0c-4fa1-b808-173bc1cb7109",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"displayName\": \"Postman created items\"\r\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}"
							},
							"response": []
						},
						{
							"name": "Delete a To Do list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47a2878a-ce79-450a-8a02-4c50ae3081f4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskListId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bc792ff2-0042-4681-bf0c-1509c29b7f4a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}"
							},
							"response": []
						},
						{
							"name": "Get my To Do list tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b0de378-5a26-47a8-b762-32b96b0d63ac",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fe7907fb-faa7-462d-a82d-7cfc7da6b4d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}/tasks"
							},
							"response": []
						},
						{
							"name": "Create a To Do task in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e61930e7-12b8-4952-be76-98d968c056c9",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e1272654-5ef3-4b51-a152-cee438cc1814",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Postman created Task\",\r\n   \"linkedResources\":[\r\n      {\r\n         \"webUrl\":\"http://microsoft.com\",\r\n         \"applicationName\":\"Microsoft\",\r\n         \"displayName\":\"Microsoft\"\r\n      }\r\n   ]\r\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}/tasks"
							},
							"response": []
						},
						{
							"name": "Update a To Do task in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f0383a7-53a1-4969-b967-0f8f89dd0dba",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "10c0bee9-72ec-4756-b393-b696e0a29727",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"dueDateTime\":{\r\n      \"dateTime\":\"2021-04-19T00:00:00\",\r\n      \"timeZone\":\"Eastern Standard Time\"\r\n   }\r\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}/tasks/{{TaskId}}"
							},
							"response": []
						},
						{
							"name": "Delete a To Do task in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d33cafec-fabc-42a0-9baf-a9d578f02c29",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            postman.setEnvironmentVariable(\"TaskId\", \"\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "365824f0-fcb6-4527-8589-db07890e2487",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}/tasks/{{TaskId}}"
							},
							"response": []
						}
					],
					"id": "d9dcc90a-43a9-43ba-9704-8c6381fe081f"
				},
				{
					"name": "Teams",
					"item": [
						{
							"name": "Get my joined teams",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"id": "7ed3ebbc-bd46-4ed9-be74-540b8b44d6fb"
									}
								}
							],
							"id": "f86fc4bd-16f4-410d-8648-5b54079aeda5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/me/joinedTeams"
							},
							"response": []
						},
						{
							"name": "Get members of a team",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"id": "c66fe031-5f30-47fd-bd8e-cbce1b692a0b"
									}
								}
							],
							"id": "9b6db753-276a-4122-b4d8-e0129d431985",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/groups/{{TeamId}}/members"
							},
							"response": []
						},
						{
							"name": "Get channels of a team",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ChannelId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"id": "3ba4238b-f87b-4b5b-b33f-2a2500b1c97a"
									}
								}
							],
							"id": "be1e9031-e47b-4d69-a5d8-d0f02c9deaf8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels"
							},
							"response": []
						},
						{
							"name": "Get channel info",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"id": "5eeb7d80-7b3e-44f4-baab-004880a03b5f"
									}
								}
							],
							"id": "e407e251-d882-45ac-be82-940fafc2ba98",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}"
							},
							"response": []
						},
						{
							"name": "Create team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19e2f667-c6b3-4c38-afa8-25d34d3a9181",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            location = pm.response.headers.get(\"Location\");\r",
											"            var patt = /[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i;\r",
											"            var result = location.match(patt);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", result);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ec334629-c328-4189-8cb9-69684535efe7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"template@odata.bind\": \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\n  \"displayName\": \"My Sample Team\",\n  \"description\": \"My Sample Team’s Description\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/teams"
							},
							"response": []
						},
						{
							"name": "Create channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ea50b57-79de-427b-8605-65ac890c6bb1",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ChannelId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "32ab6c94-a7a5-45c5-bf49-908fe9241ae5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Architecture Discussion\",\n  \"description\": \"This channel is where we debate all future architecture plans\"\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels"
							},
							"response": []
						},
						{
							"name": "Get apps in a team",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"AppId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"id": "2d5f5e75-506c-45b5-abcb-25862b3e94b5"
									}
								}
							],
							"id": "d3e6bfe7-f644-4e2e-94e8-8cec6d3a796d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/installedApps?$expand=teamsAppDefinition",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"installedApps"
									],
									"query": [
										{
											"key": "$expand",
											"value": "teamsAppDefinition"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get tabs in a channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"id": "5a440747-6a9e-48e5-97c1-25b3a4483cdc"
									}
								}
							],
							"id": "22b5776f-ce6c-422c-81c7-3c62b34548c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}/tabs?$expand=teamsApp",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"tabs"
									],
									"query": [
										{
											"key": "$expand",
											"value": "teamsApp"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get items in a team drive",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"id": "4fdecb6b-acd8-4df2-9246-5e325fa0e9f3"
									}
								}
							],
							"id": "4ac84b90-5448-4884-829e-2a37b0b3d334",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/groups/{{TeamId}}/drive/root/children"
							},
							"response": []
						},
						{
							"name": "Get messages (without replies) in a channel (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab387bba-2461-458d-a436-f8e8e4ce479a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "556916a9-2703-4841-b8bd-ec32dffc8f9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages"
							},
							"response": []
						},
						{
							"name": "Get a message in a channel (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1fb07ea-208b-4c40-b7d1-5047375c08b3",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3b532e72-b87d-4843-a2c0-c708a0b4d52d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages/{{MessageId}}"
							},
							"response": []
						},
						{
							"name": "Get replies to a message in a channel (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1b02c22-f7ac-4ab7-be23-93923a16acdb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ReplyId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "55da4cc8-0ac5-4f15-a7cb-6f0c75269a76",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages/{{MessageId}}/replies"
							},
							"response": []
						},
						{
							"name": "Get a reply of a message (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a647bf1-47e7-40da-9ad0-36f5d4895614",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "87ad5b28-0ebd-4af3-9086-17d311134707",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages/{{MessageId}}/replies/{{ReplyId}}"
							},
							"response": []
						},
						{
							"name": "Create a plain text chat thread (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f2a408ea-ecbb-480e-ad5c-370ef13bf7c4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "93a2952b-322d-4b32-8d7e-d4534d06dc6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": {\n    \"content\": \"Hello World!\"\n  }\n}"
								},
								"url": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages"
							},
							"response": []
						},
						{
							"name": "Create an HTML chat thread (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2f0abf5-20ed-4f61-bb69-4ae319de708f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ce7584e7-b003-4364-8bb7-936fdd22ed9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": {\n    \"contentType\": \"html\",\n    \"content\": \"<div><div>\\n<div><img alt=\\\"GIF Image\\\" height=\\\"250\\\" src=\\\"https://media3.giphy.com/media/f5xmRWRu4zxxh2mE5v/giphy.gif?cid=de9bf95eevnce0lknjlbneccchvdkn991jea1gtmw2zmvdke&amp;rid=giphy.gif\\\" width=\\\"250\\\" style=\\\"max-height:250px; width:250px; height:250px\\\"></div>\\n\\n\\n</div>\\n</div>\"\n  }\n}"
								},
								"url": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages"
							},
							"response": []
						}
					],
					"id": "2acb5ece-a5f5-4c25-a1ec-b464227cd172"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Get my profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "316d041d-5344-4e2f-8597-fa35a14efdcc",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5b90aff8-0e90-4b18-97d5-7fbf19822043",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/me"
							},
							"response": []
						},
						{
							"name": "Get my about me",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "019e8e49-e26d-4109-8cb5-8533763fb777",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9d14d4e6-f918-4bcf-953a-8ed20c65fdb3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/me/aboutMe"
							},
							"response": []
						},
						{
							"name": "Get my skills",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fb4c829-9cbe-446d-bbac-febb9e7cf8f8",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4ebd4ac4-a77a-4326-a3ac-02fc46d9e3b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/?$select=displayName,skills",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										""
									],
									"query": [
										{
											"key": "$select",
											"value": "displayName,skills"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb7f8336-19ab-496e-bd5e-887685d6f7bc",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1799e186-9c6b-4089-8e8b-9749c9812a30",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/me/manager"
							},
							"response": []
						},
						{
							"name": "Get my direct reports",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c86f5ad9-21b0-4d94-85ef-7435a0939e3e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "25e345c6-8c84-48f9-bdbb-7c8f2ffdf49d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/me/directReports"
							},
							"response": []
						},
						{
							"name": "Get my groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3544031f-54ba-47f2-a8eb-f318e9055dce",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a23b33f9-2921-484e-8df2-ec88957fb984",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/me/memberOf"
							},
							"response": []
						},
						{
							"name": "Get my photo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d62dd9f8-a702-4a84-8b2c-289b753d7b2d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d036fd16-3918-4fe2-96cd-3fc04136ece2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/me/photo/$value"
							},
							"response": []
						},
						{
							"name": "Get users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a8efa71-bcd6-4f36-92a4-085c85ee8a33",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least User.Read.All in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "03a8d97a-1e54-47ba-b815-7a6b757f5c6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/users"
							},
							"response": []
						},
						{
							"name": "Get users $filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3df98726-f82c-4228-9169-edaa6d63529f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least User.Read.All in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "039015f6-3f32-4c40-82cf-a69bfbdb51eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users?$filter=Department eq 'Finance'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Department eq 'Finance'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user's profile by email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a00e12e-1009-47ab-9f63-c5dbfedf8edb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least User.Read.All in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e75bf087-3034-49e6-9ba0-31aabd241dc0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/users/{{UserName}}"
							},
							"response": []
						},
						{
							"name": "Get a user's profile by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43116ae5-01a1-4af5-b8d4-651839dec359",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "55a7d927-b9be-4849-9c15-cdc6f52cb334",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/users/{{UserId}}"
							},
							"response": []
						},
						{
							"name": "Get a user's photo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08be81af-b481-44ef-a3e9-93568bd1667c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3c8b817e-b221-4f68-8c8e-c57a019f9309",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/users/{{UserId}}/photo/$value"
							},
							"response": []
						},
						{
							"name": "Invite a guest user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23626358-46c2-413f-9a19-aa679fc590d7",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Invite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            // Get invited user id\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.invitedUser.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "93167c5b-3d7c-4d42-aae8-61722a1d94ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"invitedUserDisplayName\": \"<Display Name of Invited User>\", \r\n    \"invitedUserEmailAddress\": \"<Email Address of Invited User>\", \r\n    \"invitedUserMessageInfo\": {\r\n        \"messageLanguage\": \"en-US\",\r\n        \"ccRecipients\": [\r\n             {\r\n                \"emailAddress\": {\r\n                    \"name\": \"<Optional CC for Invitation>\",\r\n                    \"address\": \"<Optional CC Email Address for Invitation>\"\r\n                 }\r\n             }\r\n        ],\r\n        \"customizedMessageBody\": \"Hi, you have just been invited to Azure AD with Postman using Microsoft Graph!\"\r\n     },\r\n    \"sendInvitationMessage\": true, \r\n    \"inviteRedirectUrl\": \"https://myapps.microsoft.com\" \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/v1.0/invitations",
								"description": "Invite Azure AD B2B Guest User using Delegated Permission"
							},
							"response": []
						}
					],
					"id": "fb6faadf-ab93-4cc5-93fc-219405b3cdcd"
				},
				{
					"name": "Windows Updates (beta)",
					"item": [
						{
							"name": "Catalog",
							"item": [
								{
									"name": "List catalog entries",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8b9e847e-831d-4272-ae4e-f13211ca4caa",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "baadfa04-586e-441c-a3aa-27a7657cfcfe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/catalog/entries"
									},
									"response": []
								}
							],
							"id": "1919463c-bbb4-4af1-ba62-ecce684d91f6"
						},
						{
							"name": "Deployment",
							"item": [
								{
									"name": "Deployment audience",
									"item": [
										{
											"name": "List members",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c9acb706-5cef-494b-be10-855d87cbcd60",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ecd2f253-134b-42b2-93d5-224e193e754e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/members"
											},
											"response": []
										},
										{
											"name": "List exclusions",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a98a9c51-1073-46f7-854f-200029538208",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "01d19214-c34c-4b52-8209-a4bf2dcc75bc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/exclusions"
											},
											"response": []
										},
										{
											"name": "Update audience (add members)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "294460cc-8907-4619-86cf-6f2624d8fde0",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1580c6ba-1a56-485a-b0ef-273deec46559",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addMembers\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\" // deadbeef-cad1-4da9-b357-3ee3cde5d50a\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/updateAudience"
											},
											"response": []
										},
										{
											"name": "Update audience (add exclusions)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "949378ef-07e3-489a-991f-dfb3bd222429",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "0ddaf5d3-80f5-4368-887c-ea6c08eed8c8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addExclusions\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\" // deadbeef-cad1-4da9-b357-3ee3cde5d50a\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/updateAudience"
											},
											"response": []
										},
										{
											"name": "Update audience (remove members)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bcc4721b-ee59-4de4-b659-4e43f71cc9dd",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "69ee678d-3cdc-49a6-8aad-6d3a916f6384",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"removeMembers\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\" // deadbeef-cad1-4da9-b357-3ee3cde5d50a\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/updateAudience"
											},
											"response": []
										},
										{
											"name": "Update audience (remove exclusions)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c527b61d-71c6-4688-ba63-0ffc1b94aef4",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c30e91ba-e0b3-4bae-8043-f2b367da7f3c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"removeExclusions\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\" // deadbeef-cad1-4da9-b357-3ee3cde5d50a\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/updateAudience"
											},
											"response": []
										}
									],
									"id": "35d745c3-3731-497f-bc4b-bef302d38a07"
								},
								{
									"name": "Create deployment (feature update)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "29ae04f7-61e9-46b9-ba4e-d915724ee04a",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "971aa901-5bd0-4d53-a26d-3ed3b83f4c17",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.featureUpdateReference\",\n        \"version\": \"{{FeatureUpdateVersion}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments"
									},
									"response": []
								},
								{
									"name": "Create deployment (expedited security update)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3e35fc08-55a6-4e9c-8a06-10e9fbdacfc8",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "95cd1401-2963-439b-a7c6-3f59feb1b026",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": {\n        \"@odata.type\": \"microsoft.graph.windowsUpdates.expeditedQualityUpdateReference\",\n        \"releaseDate\": \"{{QualityUpdateReleaseDate}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments"
									},
									"response": []
								},
								{
									"name": "Create deployment (rate-based gradual rollout)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e215f535-666d-4bdf-af76-7539b9314243",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e4abb6bc-50a8-4585-8b1b-df460f24a844",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.featureUpdateReference\",\n        \"version\": \"{{FeatureUpdateVersion}}\"\n    },\n    \"settings\": {\n        \"@odata.type\": \"microsoft.graph.windowsUpdates.windowsDeploymentSettings\",\n        \"rollout\": {\n            \"devicesPerOffer\": 100,\n            \"durationBetweenOffers\": \"P7D\"\n        },\n        \"monitoring\": {\n            \"monitoringRules\": [\n                {\n                    \"@odata.type\": \"#microsoft.graph.windowsUpdates.monitoringRule\",\n                    \"signal\": \"rollback\",\n                    \"threshold\": 5,\n                    \"action\": \"pauseDeployment\"\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments"
									},
									"response": []
								},
								{
									"name": "Create deployment (date-based gradual rollout)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e514a00-5d79-4e15-8e91-e033a566089d",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5625ad6d-19ed-49a8-9243-01f29e4f171e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.featureUpdateReference\",\n        \"version\": \"{{FeatureUpdateVersion}}\"\n    },\n    \"settings\": {\n        \"@odata.type\": \"microsoft.graph.windowsUpdates.windowsDeploymentSettings\",\n        \"rollout\": {\n            \"startDateTime\": \"{{DeploymentStartDateTime}}\",\n            \"endDateTime\": \"{{DeploymentEndDateTime}}\",\n            \"durationBetweenOffers\": \"P7D\"\n        },\n        \"monitoring\": {\n            \"monitoringRules\": [\n                {\n                    \"@odata.type\": \"#microsoft.graph.windowsUpdates.monitoringRule\",\n                    \"signal\": \"rollback\",\n                    \"threshold\": 5,\n                    \"action\": \"pauseDeployment\"\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments"
									},
									"response": []
								},
								{
									"name": "List deployments",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "37492364-156a-472e-a03d-1bdc05cde664",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ff07d1e0-935b-41a8-a24e-1beea06c6826",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments"
									},
									"response": []
								},
								{
									"name": "Get deployment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d516135-a3a5-4bda-9446-c683dc8574a5",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4c95f2f3-1da1-41d0-9f35-2ced3fe57590",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}"
									},
									"response": []
								},
								{
									"name": "Update deployment (replace monitoring rules)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "68d46093-12f7-4cc4-8289-45155b2f8ca7",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c48fd77a-1b30-48d8-94cc-98bf8b2ab77e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"settings\": {\n        \"@odata.type\": \"microsoft.graph.windowsUpdates.windowsDeploymentSettings\",\n        \"monitoring\": {\n            \"monitoringRules\": [\n                {\n                    \"signal\": \"rollback\",\n                    \"threshold\": 5,\n                    \"action\": \"pauseDeployment\"\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}"
									},
									"response": []
								},
								{
									"name": "Update deployment (request paused state)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "489da391-2696-42b2-b772-6a0ba357c3df",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "162f391a-68ac-4a1b-a403-671e274662ab",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.deploymentState\",\n        \"requestedValue\": \"paused\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}"
									},
									"response": []
								},
								{
									"name": "Update deployment (clear requested state)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eb693237-0825-48ae-ac38-993ff128c87e",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1376aad8-bddc-499c-8f82-3a9721a2989b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.deploymentState\",\n        \"requestedValue\": \"none\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}"
									},
									"response": []
								},
								{
									"name": "Delete deployment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d14bd2fe-339b-4f88-b708-cbfbb584acdb",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "6ad4cc00-89f7-4116-ab5b-b62b62be910b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}"
									},
									"response": []
								}
							],
							"id": "fdd53ce3-50a9-4079-b6f8-b1a192821585"
						},
						{
							"name": "Updatable asset",
							"item": [
								{
									"name": "Azure AD device",
									"item": [
										{
											"name": "List Azure AD devices",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c934506b-545b-43b8-b86b-eb2fac691619",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "6f661681-7e31-4640-a0e5-3a126404d4de",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/?$filter=isof('microsoft.graph.windowsUpdates.azureADDevice')",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"updatableAssets",
														""
													],
													"query": [
														{
															"key": "$filter",
															"value": "isof('microsoft.graph.windowsUpdates.azureADDevice')"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Azure AD device",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "54aa8ee8-6a22-49d3-8bb1-4b1976ec7d89",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "5f228cde-57bd-4e53-94e3-57932d728cbd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/{{UpdatableAssetId}}"
											},
											"response": []
										},
										{
											"name": "Delete Azure AD device",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0aaa8200-bd4a-417b-a1b8-36cc01b2c5b3",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "42e40d5b-7983-47a0-b738-be8b755ba1e0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{UpdatableAssetId}}"
											},
											"response": []
										},
										{
											"name": "Enroll in feature update management",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47219eee-d4e8-4067-8d2f-8350eebaa334",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "70a10efa-4a36-4400-9c23-46b6bccf8d15",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"updateCategory\": \"feature\",\n    \"assets\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/enrollAssets"
											},
											"response": []
										},
										{
											"name": "Unenroll from feature update management",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3aa3731-bf00-4780-b91b-859c8e92c465",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c71bf7a3-f23b-47ff-979e-b99da45ebfe9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"updateCategory\": \"feature\",\n    \"assets\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/unenrollAssets"
											},
											"response": []
										}
									],
									"id": "65903245-0772-438a-bad1-ef241b85bd29"
								},
								{
									"name": "List updatable assets",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab394c27-69ef-4320-80a2-0b328b393b07",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "17527fce-bdb7-407f-b7bb-4d04ebbf346c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets"
									},
									"response": []
								},
								{
									"name": "Get updatable asset",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9da46271-3df1-46bb-95e6-0233e69f1805",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c61c13f1-3c3b-4b8f-8852-c825a872079f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/{{UpdatableAssetId}}"
									},
									"response": []
								},
								{
									"name": "Delete updatable asset",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6b5f6acf-79d0-4e24-8762-7dda1b2c05e7",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Afterwards, re-run *On behalf of a User | Get User Access Token* request to update access token.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ea7c1948-99f8-4c74-9838-5be38911ba42",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{UpdatableAssetId}}"
									},
									"response": []
								}
							],
							"id": "6ca7c860-92b7-4afe-aa8a-403dd913b8fc"
						}
					],
					"id": "f9b5cc45-73f2-4862-b1d0-a5073db23cc4"
				}
			],
			"id": "9da9ae47-73b6-4010-b3e7-34e6f61332d4",
			"auth": {
				"type": "oauth2",
				"oauth2": {
					"tokenType": "",
					"accessToken": "",
					"useBrowser": false,
					"redirect_uri": "https://oauth.pstmn.io/v1/browser-callback",
					"state": "",
					"client_authentication": "header",
					"grant_type": "authorization_code",
					"tokenName": "Delegated Token",
					"scope": "https://graph.microsoft.com/.default",
					"clientSecret": "{{ClientSecret}}",
					"clientId": "{{ClientID}}",
					"authUrl": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/authorize",
					"accessTokenUrl": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/token",
					"addTokenTo": "header"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "85c4982d-67b6-4546-a68c-bc035ba928e1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "070b1dba-c831-4449-bf10-0f87e112aa50",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Application",
			"item": [
				{
					"name": "Graph Connectors",
					"item": [
						{
							"name": "Connection setup",
							"item": [
								{
									"name": "Get all connections",
									"id": "69ef7536-3bb6-4a55-bd70-69e1e11fe8c1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/external/connections"
									},
									"response": []
								},
								{
									"name": "Create connection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b3e7a41-f695-4079-b847-7788d7284be4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2ceabe2c-85e3-4968-bb68-cfb0bbfc3851",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"sampleConnectionId\",\r\n    \"name\": \"Sample connection\",\r\n    \"description\": \"Sample connection description\"\r\n}"
										},
										"url": "https://graph.microsoft.com/v1.0/external/connections"
									},
									"response": []
								},
								{
									"name": "Get connection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0fdf4e57-3714-46e5-b372-2d6009b9f09d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d594a544-e33a-48b8-b632-44e811388445",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId"
									},
									"response": []
								},
								{
									"name": "Delete connection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e814f1c-6389-4154-a94c-625cbc52982f",
												"exec": [
													"postman.setEnvironmentVariable(\"OperationUrl\", pm.response.headers.get(\"Location\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ae38f69a-0043-4930-ac97-db0d68a13634",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId"
									},
									"response": []
								},
								{
									"name": "Register schema",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e86dbf92-ebc9-4493-b2ba-0e90c98a9151",
												"exec": [
													"postman.setEnvironmentVariable(\"OperationUrl\", pm.response.headers.get(\"Location\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e8ba333d-64c5-4138-b9c9-9ec590d14963",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "prefer",
												"type": "text",
												"value": "respond-async"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"baseType\": \"microsoft.graph.externalItem\",\r\n    \"properties\": [\r\n        {\r\n            \"name\": \"id\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": false,\r\n            \"labels\": [],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"title\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": true,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [\r\n                \"title\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"extension\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": true,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"createdBy\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": true,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [\r\n                \"createdBy\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"createdDateTime\",\r\n            \"type\": \"dateTime\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [\r\n                \"createdDateTime\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"lastModifiedBy\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"lastModifiedDate\",\r\n            \"type\": \"dateTime\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [\r\n                \"lastModifiedDateTime\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"url\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": false,\r\n            \"labels\": [\r\n                \"url\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"description\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": false,\r\n            \"labels\": [],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"authors\",\r\n            \"type\": \"stringCollection\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": false,\r\n            \"labels\": [\r\n                \"authors\"\r\n            ],\r\n            \"aliases\": []\r\n        }\r\n    ]\r\n}"
										},
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/schema"
									},
									"response": []
								},
								{
									"name": "Get schema",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4d22484-8680-40e4-83fc-13163a4f5720",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d888ea1d-54ab-409a-a6be-17be2b722790",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/schema"
									},
									"response": []
								},
								{
									"name": "Get connection operation status",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0fdf4e57-3714-46e5-b372-2d6009b9f09d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2fb3351f-bdae-4595-9af4-bd4e022d8ab3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{OperationUrl}}"
									},
									"response": []
								}
							],
							"id": "704ca489-333b-4098-9c35-f186d99b8021"
						},
						{
							"name": "Content sync",
							"item": [
								{
									"name": "Put item",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18237dae-ee3e-464f-9a63-f9462c2ac455",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "191cc4cd-942c-4458-8d01-a1e928750d47",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"acl\": [\r\n        {\r\n            \"type\": \"everyone\",\r\n            \"value\": \"c5f19b2d-0a77-454a-9b43-abf298c3b34e\",\r\n            \"accessType\": \"grant\"\r\n        }\r\n    ],\r\n    \"properties\": {\r\n        \"title\": \"Sample item title\",\r\n        \"extension\": \"docx\",\r\n        \"createdBy\": \"John Doe\",\r\n        \"createdDateTime\": \"2021-04-27T11:04:00Z\",\r\n        \"iconUrl\": \"https://contentdepot.blob.core.windows.net/filedepot/sampleIconUrl.png\",\r\n        \"authors\": [\r\n            \"John Doe\"\r\n        ],\r\n        \"authors@odata.type\": \"Collection(String)\",\r\n        \"lastModifiedDate\": \"2021-04-27T11:04:00Z\",\r\n        \"url\": \"https://sampleItemUrl.com\",\r\n        \"containerName\": \"Sample container name\",\r\n        \"containerUrl\": \"https://sampleContainerUrl.com\"\r\n    },\r\n    \"content\": {\r\n        \"type\": \"text\",\r\n        \"value\": \"Empower customers and partners to be more productive by enabling them to bring content and activity information and allow external content to participate in Microsoft Search and OfficeHub experiences so that they find relevant and actionable information across all their applications.\"\r\n    }\r\n}"
										},
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/items/sampleItemId"
									},
									"response": []
								},
								{
									"name": "Get item",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2c967738-ff5a-4a27-9a83-61b67c123a7e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "6d50384d-7798-46e0-a488-eb9acfe9af0a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/items/sampleItemId"
									},
									"response": []
								},
								{
									"name": "Delete item",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc532bf5-9309-4b9d-8e17-694d4e849228",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "40f7d2ab-473c-4bd6-808a-094ab3340519",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/items/sampleItemId"
									},
									"response": []
								}
							],
							"id": "eab701a0-dbfe-4db6-8a22-976ae6f58458",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										],
										"id": "524131fe-6189-40b8-8b3b-0f0e915bb77b"
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										],
										"id": "b9d8ee9d-ae68-4957-8823-025cdbe0b904"
									}
								}
							]
						},
						{
							"name": "Identity Sync",
							"item": [
								{
									"name": "Create group",
									"id": "36a51cfe-2818-4a57-87b4-d1489f343013",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\":\"graphConnectorGroupId\",\r\n   \"displayName\":\"Display name of group sampleExternalGroupId\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups",
										"description": "Create group under the connection"
									},
									"response": []
								},
								{
									"name": "Get group",
									"id": "9547d848-b71f-485a-a797-cd358f754d11",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId",
										"description": "Get a previously created group under the connection."
									},
									"response": []
								},
								{
									"name": "Add AAD user as member",
									"id": "328f66a5-e35d-4c5f-9ee9-ff02d41ea17a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\":\"e42f427c-f33f-4389-afd8-db432ff6a338\",\r\n   \"type\":\"user\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/"
									},
									"response": []
								},
								{
									"name": "Add AAD group as member",
									"id": "2ca0dd7b-0065-4a5b-90f5-0eee150afe9a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\":\"e42f427c-f33f-4389-afd8-db432ff6a338\",\r\n   \"type\":\"group\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/"
									},
									"response": []
								},
								{
									"name": "Add connector group as member",
									"id": "84d7bc2e-0edc-402b-a7c1-9b0ab489cb14",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\":\"childGraphConnectorGroupId\",\r\n   \"type\":\"externalGroup\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/"
									},
									"response": []
								},
								{
									"name": "Remove member",
									"id": "7f659d59-c636-4b52-98d2-3527e8e69767",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/childGraphConnectorGroupId"
									},
									"response": []
								},
								{
									"name": "Delete group",
									"id": "1ce0706e-289e-4215-9c59-908b0b9ed950",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId"
									},
									"response": []
								}
							],
							"id": "5c5091ed-8c0d-4eb7-89da-e62fb7932622"
						}
					],
					"id": "a5bc4963-3cf0-4314-b29a-e36fd99e8940",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7a3adf66-4160-4580-8db0-6e8acda91dc9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ef170f43-8ed8-4cdd-a9d7-159051115832",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Mail",
					"item": [
						{
							"name": "Get a user's messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53aa3a9f-f227-42a8-b712-67d7a9f51f62",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bf57b683-85a5-4950-9889-58c2ca16d899",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/users/{{UserId}}/messages"
							},
							"response": []
						},
						{
							"name": "Get a user's message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56cef622-b65c-4d1d-87a7-78bdf149c404",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.environment.get(\"MessageId\") === \"\")\r",
											"            {\r",
											"                console.log(\"You need to run *Application | Mail | Get a users messages* request first or set a MessageId environment variable.\");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (pm.response.status === \"Forbidden\")\r",
											"                {\r",
											"                    console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "972a83a3-0182-4973-bb26-8355f4a66e85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/users/{{UserId}}/messages/{{MessageId}}"
							},
							"response": []
						},
						{
							"name": "Get mailbox settings Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7e0c7b6-e03f-45c1-a194-37680f02307d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5571fc7c-5409-4817-a455-40f7a7fcb1e6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users/{{UserId}}/mailboxSettings",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users",
										"{{UserId}}",
										"mailboxSettings"
									],
									"query": [
										{
											"key": "UserId",
											"value": "mikecdev",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "0f1c3db0-71bb-487d-b671-81f9a2b258cf"
				},
				{
					"name": "SharePoint",
					"item": [
						{
							"name": "Get sites",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc291a39-03f8-4ce1-a1e4-318bfd125984",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add user delegated permissions in your application to atleast *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b111dc9d-aec8-4390-9f00-223f5bdf8f0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "apiversion=2.1",
										"type": "text"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/sites"
							},
							"response": []
						}
					],
					"id": "b403ee0c-1ed3-4923-8f27-9c3a90a9ffe8"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Get subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4998c251-2688-4b3d-b865-9c9446e8eb61",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add user delegated permissions in your application to atleast *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bca1010b-70e6-4541-b1dd-f11c61764870",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": "https://graph.microsoft.com/v1.0/subscriptions"
							},
							"response": []
						},
						{
							"name": "Update subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92fa0f7a-accf-4638-a4a6-2418989b0f47",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add user delegated permissions in your application to atleast *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d4d1b478-3b8b-43a3-8056-ee29bee9afae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"expirationDateTime\":\"2019-05-19T12:41:53.2962802Z\"\r\n}"
								},
								"url": "https://graph.microsoft.com/v1.0/subscriptions/{{SubscriptionId}}"
							},
							"response": []
						},
						{
							"name": "Create subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7cfbd217-6593-4602-9e89-6e5cdb798166",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add user delegated permissions in your application to atleast *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c908b98f-3efb-4ffe-a26b-2036e6f21b56",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"changeType\": \"created,updated\",\r\n  \"notificationUrl\": \"{{notificationUrl}}\",\r\n  \"resource\": \"{{resourcePath}}\",\r\n  \"expirationDateTime\": \"{{expirationDateTime}}\",\r\n  \"clientState\": \"secretClientState\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/beta/subscriptions"
							},
							"response": []
						}
					],
					"id": "4fd48b99-a42c-42a0-964c-9afde5fb6590"
				},
				{
					"name": "Teams",
					"item": [
						{
							"name": "Memberships",
							"item": [
								{
									"name": "Get team members",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "af99d864-d6dd-4d9f-b550-9728cdaa2461",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "dd306f22-4522-46dc-8a73-7218613180ba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/members"
									},
									"response": []
								},
								{
									"name": "Get single team member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ecaabb7d-d49f-4050-a89a-c7327e302e88",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8b4d66d3-ccf9-480e-b903-2f79c592554c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/members/{{UserId}}"
									},
									"response": []
								},
								{
									"name": "Get channel members",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7f271e9-2103-45d2-af7e-cb5b2616d4e8",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "22b79784-2cb5-466b-bc91-a4d2e915a2da",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/channels/{{ChannelId}}/members"
									},
									"response": []
								},
								{
									"name": "Add channel member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "195d57f5-9a15-43ff-b069-45c90fa9e523",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2167d36e-b014-4a31-8476-c0b4a62d6468",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@odata.type\": \"#microsoft.graph.aadUserConversationMember\",\r\n    \"roles\": [\"owner\"],\r\n    \"user@odata.bind\": \"https://graph.microsoft.com/v1.0/users/8b081ef6-4792-4def-b2c9-c363a1bf41d5\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}/members"
									},
									"response": []
								},
								{
									"name": "Remove team member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f60364cf-4edd-4c2e-8290-0cf18d675b52",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8c9f2fd8-6b4e-43d1-a432-4f400399571e",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/members/{{UserId}}"
									},
									"response": []
								},
								{
									"name": "Remove channel member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cbc98b3f-ba0e-4157-b0b2-124a18bd13a2",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "56be2c45-0062-4624-9c79-841d0957297d",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}members/{{UserId}}"
									},
									"response": []
								},
								{
									"name": "Update team member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a3becd6d-7fd0-4091-aeb1-009e0acabb78",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "029c343f-aa9d-4894-90e9-002dd7f65a79",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@odata.type\":\"#microsoft.graph.aadUserConversationMember\",\r\n  \"roles\": [\"owner\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/members/{{UserId}}"
									},
									"response": []
								},
								{
									"name": "Update channel member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "690a2790-8c1d-4f93-b1e9-0720216e8d03",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f998e445-c843-4221-ab75-7eadc944eaa4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@odata.type\":\"#microsoft.graph.aadUserConversationMember\",\r\n  \"roles\": [\"owner\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/channels/{{ChannelId}}/members/{{UserId}}"
									},
									"response": []
								},
								{
									"name": "Add team member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "85e2eaa2-420f-4c18-94ad-7bf8d2c7d31f",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c20b0448-6d7a-4100-a59b-14f0495928a6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@odata.type\": \"#microsoft.graph.aadUserConversationMember\",\r\n    \"roles\": [\"owner\"],\r\n    \"user@odata.bind\": \"https://graph.microsoft.com/v1.0/users/a82083e7-cc7c-48a4-9ed1-ce70e42f7453\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/members"
									},
									"response": []
								}
							],
							"id": "ab9c70e6-948f-4d1b-9ace-e497092fee0a"
						},
						{
							"name": "Get user's joined teams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e954707-f299-4398-b8d3-3827f64cb317",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "740acef1-42dc-4774-a0c9-08b294f0a104",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/users/{{UserId}}/joinedTeams"
							},
							"response": []
						},
						{
							"name": "Get primary channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b68a88c-8675-4957-af7b-6c32c2d1dfa0",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3b7b5658-c391-4490-a87c-f5c3de4ae0a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/primaryChannel"
							},
							"response": []
						},
						{
							"name": "Get team channels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "94cced2a-dea9-434e-aa88-2eb1394a2b87",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8da8d646-8d51-41c7-bd06-26f98019f212",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/channels"
							},
							"response": []
						},
						{
							"name": "Get team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "90daef67-cc69-46fb-8387-e90bc9063e2a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f4906be7-683e-4b0e-b1bb-27d957403899",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}"
							},
							"response": []
						},
						{
							"name": "Delete team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04575585-0ef3-4e69-a783-b3b688eb4b5e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6a845973-7feb-4c7b-a465-a5fc89ddaee5",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/groups/{{GroupId}}"
							},
							"response": []
						},
						{
							"name": "Create team from group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "21c5a082-7b8d-48c6-9232-5ab12197ea0a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a0096596-4df8-48f5-84ec-9860c7f4c7fa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n  \"memberSettings\": {\r\n    \"allowCreatePrivateChannels\": true,\r\n    \"allowCreateUpdateChannels\": true\r\n  },\r\n  \"messagingSettings\": {\r\n    \"allowUserEditMessages\": true,\r\n    \"allowUserDeleteMessages\": true\r\n  },\r\n  \"funSettings\": {\r\n    \"allowGiphy\": true,\r\n    \"giphyContentRating\": \"strict\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/v1.0/groups/{{GroupId}}/team"
							},
							"response": []
						},
						{
							"name": "Update team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fc9dcd1-cc37-43ba-87b7-25a35b5ed851",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "906d5f3a-cd4a-4786-ae28-3e1177a7673f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n  \"memberSettings\": {\r\n    \"allowCreateUpdateChannels\": true\r\n  },\r\n  \"messagingSettings\": {\r\n    \"allowUserEditMessages\": true,\r\n    \"allowUserDeleteMessages\": true\r\n  },\r\n  \"funSettings\": {\r\n    \"allowGiphy\": true,\r\n    \"giphyContentRating\": \"strict\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}"
							},
							"response": []
						},
						{
							"name": "Create team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5ddbd99-4a5c-4fda-80e8-ee0ae8cdc7cb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "af3db048-52ba-43fd-ba37-4546e0487619",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"template@odata.bind\": \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\r\n  \"displayName\": \"My Sample Team\",\r\n  \"description\": \"My Sample Team’s Description\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}/members"
							},
							"response": []
						},
						{
							"name": "Archive team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a24722f6-e255-4600-8830-c35c451b2443",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "51452499-16e6-4128-89b6-902914c37850",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"shouldSetSpoSiteReadOnlyForMembers\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/archive"
							},
							"response": []
						},
						{
							"name": "Clone team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57826552-07b5-4597-96f3-1d62db0ec5b9",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "14712c1b-7267-43e0-8585-21f7d5291ea9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n     \"displayName\": \"Library Assist\",\r\n     \"description\": \"Self help community for library\",\r\n     \"mailNickname\": \"libassist\",\r\n     \"partsToClone\": \"apps,tabs,settings,channels,members\",\r\n     \"visibility\": \"public\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/clone"
							},
							"response": []
						},
						{
							"name": "Unarchive team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45c5f329-5239-4259-90eb-97eca7b1fd31",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *On behalf of a User | Get User Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *On behalf of a User | Get User Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a4ea5262-658f-4118-933a-3515b172c449",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/unarchive"
							},
							"response": []
						}
					],
					"id": "7d94aba1-5af8-424e-897d-a65a50d6fa85"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Get users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "471da369-de0f-481a-8b30-42993b6c896b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            // Get a user with a mailbox\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e0940d3f-b6e0-4dd8-aee3-4c47afd5503b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5d28325f-1b61-4ea3-bebc-2654458864fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/users"
							},
							"response": []
						},
						{
							"name": "Get License Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "471da369-de0f-481a-8b30-42993b6c896b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            // Get a user with a mailbox\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e0940d3f-b6e0-4dd8-aee3-4c47afd5503b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f578d3e2-ae8a-441f-9cde-f45369d524df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/users/JohannaL@vxcjs.onmicrosoft.com/licenseDetails"
							},
							"response": []
						},
						{
							"name": "Invite guest user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1a5ef98-f245-4e86-91d6-b8ceb375857a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"You need to run *Get App-Only Access Token* request first.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user application permissions in your application to at least *User.Invite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. And re-run *Application | Get App-Only Access Token* request to update access token. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            // Get invited user id\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.invitedUser.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5ae86cde-5fc3-479e-9405-d8fca5d26eb0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0b24a7ee-ab38-409f-b132-e126591a21d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"invitedUserDisplayName\": \"<Display Name of Invited User>\", \r\n    \"invitedUserEmailAddress\": \"<Email Address of Invited User>, \r\n    \"invitedUserMessageInfo\": {\r\n        \"messageLanguage\": \"en-US\",\r\n        \"ccRecipients\": [\r\n             {\r\n                \"emailAddress\": {\r\n                    \"name\": \"<Optional CC for Invitation>\",\r\n                    \"address\": \"<Optional CC Email Address for Invitation>\"\r\n                 }\r\n             }\r\n        ],\r\n        \"customizedMessageBody\": \"Hi, you have just been invited to Azure AD with Postman using Microsoft Graph!\"\r\n     },\r\n    \"sendInvitationMessage\": true, \r\n    \"inviteRedirectUrl\": \"https://myapps.microsoft.com\" \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://graph.microsoft.com/v1.0/invitations",
								"description": "Invite Azure AD B2B Guest User using Application Permission"
							},
							"response": []
						}
					],
					"id": "e3842845-c9b8-4dc1-921b-7e33a4c9c6b0"
				},
				{
					"name": "DIrectory",
					"item": [
						{
							"name": "Get directory objects",
							"id": "7f283c54-9b9d-4747-95f5-e905a2423607",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://graph.microsoft.com/v1.0/directoryObjects/{id}"
							},
							"response": []
						}
					],
					"id": "ebce3677-d9fc-45da-b737-b090f932e6f8"
				}
			],
			"id": "87b985a4-283f-4f15-bbe9-576f3a72f66d",
			"auth": {
				"type": "oauth2",
				"oauth2": {
					"tokenType": "",
					"accessToken": "",
					"useBrowser": true,
					"tokenName": "Application Token",
					"challengeAlgorithm": "S256",
					"scope": "https://graph.microsoft.com/.default",
					"redirect_uri": "https://app.getpostman.com/oauth2/callback",
					"grant_type": "client_credentials",
					"clientSecret": "{{ClientSecret}}",
					"clientId": "{{ClientID}}",
					"authUrl": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/authorize",
					"addTokenTo": "header",
					"client_authentication": "header",
					"accessTokenUrl": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/token"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "781e0a1e-3915-4db8-8fbf-611964afb12e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a4384104-cb29-4095-a8c3-f1840bf50977",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "Subscription validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdef60df-8b6e-402f-b2ca-ce0eba99c3e3",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content type test\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");\r",
									"});\r",
									"pm.test(\"Response body test\", function () {\r",
									"    pm.response.to.have.body(pm.request.url.query.get(\"validationToken\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bb785ae2-3234-43fe-978d-4a91bd1f6cab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/notification?validationToken=something",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"notification"
							],
							"query": [
								{
									"key": "validationToken",
									"value": "something",
									"description": "random validation token passed by the Microsoft Graph when validating the notificationURL"
								}
							]
						},
						"description": "Allows you to validate whether the notification endpoint you are building properly passed Microsoft Graph Subscription creation validation.\nThe response content type should be text/plain, code 200 OK and the body the information passed by the validationToken query parameter"
					},
					"response": []
				}
			],
			"id": "d9498db4-7133-41e2-8e08-c8b9646f9e63"
		},
		{
			"name": "v1.0 $metadata",
			"id": "dbd143a3-1780-4fda-9cd1-bf96489872cf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;odata.metadata=full"
					}
				],
				"url": "https://graph.microsoft.com/v1.0/$metadata"
			},
			"response": []
		},
		{
			"name": "beta $metadata",
			"id": "efaf9ea6-435b-435f-9a37-b3f9100288fe",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;odata.metadata=full"
					}
				],
				"url": "https://graph.microsoft.com/beta/$metadata"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "bf37371d-a4e2-453f-b335-2af2e6cab275",
				"type": "text/javascript",
				"exec": [
					"if(!pm.request.headers.find(\"SdkVersion\")) {",
					"    pm.request.headers.add({key: \"SdkVersion\", value: \"postman-graph/v2.0\"});",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "6dee4194-17a3-492d-8333-98c1e2c953ff",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}